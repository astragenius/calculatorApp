{"version":3,"sources":["script.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toggleInput","document","querySelectorAll","switchTheme","e","html","querySelector","classList","remove","value","add","forEach","input","addEventListener","Calculator","output","prevOperant","this","clear","currentOperant","operation","undefined","number","includes","toString","slice","toggle","floatNumber","parseFloat","isNaN","toLocaleString","innerText","getDisplayNumber","result","prev","current","console","log","showError","toFixed","nrBtn","delBtn","getElementById","resetBtn","equalBtn","operant","calculator","button","appendNumber","updateScreen","selectOperation","compute"],"mappings":"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","file":"script.js","sourcesContent":["\r\n\r\n\r\nconst toggleInput = document.querySelectorAll('input[name=state]');\r\n\r\n\r\ntoggleInput.forEach(input => {\r\n\r\n    input.addEventListener('click', switchTheme);\r\n    \r\n});\r\n\r\nfunction switchTheme(e) {\r\n\r\n    const html = document.querySelector('html');\r\n    html.classList.remove(html.classList[0]);\r\n   \r\n    if(e.target.value == \"theme-1\") {\r\n\r\n        html.classList.add('theme-1');\r\n        return\r\n    }\r\n    if(e.target.value == \"theme-2\") {\r\n\r\n        html.classList.add('theme-2');\r\n        return\r\n    }\r\n    if(e.target.value == \"theme-3\") {\r\n        html.classList.add('theme-3');\r\n        return\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Calculator {\r\n\r\n    constructor(output, prevOperant) {\r\n\r\n        this.output = output;\r\n        this.prevOperant = prevOperant;\r\n        this.clear();\r\n        \r\n    }\r\n\r\n    clear() {\r\n    \r\n       \r\n        this.currentOperant = \"\";\r\n        this.prevOperant = \"\";\r\n        this.operation = undefined;\r\n        this.output.classList.remove('error');\r\n       \r\n       \r\n    }\r\n\r\n    appendNumber(number){\r\n\r\n       // this if statement checks the currentoperant. When he has a \".\" allready then the function stops. when not the point will be added.\r\n      if(number === \".\" && this.currentOperant.includes(\".\")) {\r\n        return\r\n      }else {\r\n      this.currentOperant = this.currentOperant.toString() + number.toString();\r\n\r\n      }\r\n      \r\n\r\n    }\r\n\r\n    \r\n    delete(){\r\n        \r\n        \r\n       this.currentOperant = this.currentOperant.slice(0, -1);\r\n       \r\n    }\r\n\r\n    showError() {\r\n\r\n        this.output.classList.toggle('error');\r\n        this.currentOperant = \"ERROR\";\r\n    }\r\n\r\n    getDisplayNumber(number) {\r\n\r\n        const floatNumber = parseFloat(number);\r\n        if (isNaN(floatNumber)) return \"\";\r\n        return floatNumber.toLocaleString('en');\r\n\r\n    }\r\n\r\n    updateScreen(){\r\n\r\n        if (this.currentOperant == \"ERROR\") {\r\n\r\n            this.output.innerText = this.currentOperant;\r\n        } else{\r\n            this.output.innerText = this.getDisplayNumber(this.currentOperant);\r\n\r\n        }\r\n       \r\n      \r\n    }\r\n\r\n    selectOperation(operation){\r\n\r\n        this.operation = operation;\r\n        this.prevOperant = this.currentOperant;\r\n        this.currentOperant = \"\";\r\n\r\n    }\r\n\r\n    compute() {\r\n        let result;\r\n        const prev = parseFloat(this.prevOperant);\r\n        const current = parseFloat(this.currentOperant);\r\n        if (isNaN(prev) || isNaN(current)) return\r\n        switch (this.operation) {\r\n\r\n           \r\n            case '+':\r\n                result = prev + current;\r\n                console.log(result);\r\n                break;\r\n\r\n\r\n            case '-':\r\n                result = prev - current;\r\n                console.log(result);\r\n                break;\r\n            \r\n            case '/':\r\n                if(current == 0) {\r\n\r\n                   this.showError();\r\n                    return;\r\n                }\r\n                result = prev / current;\r\n                console.log(result);\r\n                break;\r\n            \r\n            case 'x':\r\n                result = prev * current;\r\n                console.log(result);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n\r\n\r\n        }   \r\n\r\n        result = parseFloat(result);\r\n        this.currentOperant = result.toFixed(2);\r\n        this.prevOperant = \"\";\r\n        this.operation = undefined;\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst nrBtn = document.querySelectorAll('button[value]');\r\nconst delBtn = document.getElementById('button_del');\r\nconst resetBtn = document.getElementById('button_reset');\r\nconst equalBtn = document.getElementById('button_equal');\r\nconst output = document.getElementById('output');\r\nconst operant = document.querySelectorAll('button[data-set]');\r\n\r\n\r\n\r\nconst calculator = new Calculator(output);\r\n\r\nnrBtn.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n        calculator.appendNumber(button.innerText);\r\n        calculator.updateScreen();\r\n    })\r\n})\r\n\r\noperant.forEach(button => {\r\n\r\n    button.addEventListener('click', () => {\r\n        calculator.selectOperation(button.innerText);\r\n        calculator.updateScreen();\r\n    })\r\n})\r\n\r\n\r\ndelBtn.addEventListener('click', () => {\r\n        calculator.delete();\r\n        calculator.updateScreen();\r\n       \r\n})\r\n\r\nresetBtn.addEventListener('click', () => {\r\n    calculator.clear();\r\n    calculator.updateScreen();\r\n})\r\n\r\nequalBtn.addEventListener('click', () => {\r\n    calculator.compute();\r\n    calculator.updateScreen();\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}